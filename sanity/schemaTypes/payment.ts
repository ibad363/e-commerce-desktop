import { defineField, defineType } from "sanity";

export default defineType({
  name: "payment",
  title: "Payment",
  type: "document",
  fields: [
    defineField({
      name: "order",
      title: "Order",
      type: "reference",
      to: [{ type: "order" }],
      validation: (Rule) => Rule.required(),
    }),
    defineField({
      name: "customer",
      title: "Customer",
      type: "reference",
      to: [{ type: "user" }], // Assuming you have a 'user' schema
      validation: (Rule) => Rule.required(),
    }),
    defineField({
      name: "method",
      title: "Payment Method",
      type: "string",
      options: {
        list: [
          { title: "Card", value: "card" },
          { title: "Cash on Delivery", value: "cash_on_delivery" },
        ],
      },
      validation: (Rule) => Rule.required(),
    }),
    defineField({
      name: "status",
      title: "Status",
      type: "string",
      options: {
        list: [
          { title: "Pending", value: "pending" },
          { title: "Paid", value: "paid" },
          { title: "Failed", value: "failed" },
          { title: "Refunded", value: "refunded" },
        ],
      },
      validation: (Rule) => Rule.required(),
    }),
    defineField({
      name: "transactionId",
      title: "Transaction ID",
      type: "string",
      description: "Unique ID generated by the payment gateway (if applicable)",
    }),
    defineField({
      name: "totalAmount",
      title: "Total Amount",
      type: "number",
      validation: (Rule) => Rule.required().min(1),
    }),

    defineField({
      name: "createdAt",
      title: "Created At",
      type: "datetime",
      initialValue: new Date().toISOString(),
      validation: (Rule) => Rule.required(),
    }),
    defineField({
      name: "updatedAt",
      title: "Updated At",
      type: "datetime",
      description: "The last time the payment record was updated",
      options: { dateFormat: "YYYY-MM-DD", timeFormat: "HH:mm" },
    }),
  ],
});
